<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xml:lang="en" lang="en">



<ui:composition template="/WEB-INF/plantilla.xhtml">
    <ui:define name="head">

        <h:outputScript library="js" name="mapbox-gl.js" />
        <h:outputScript library="js" name="mapbox-gl-directions.js"></h:outputScript>
        <h:outputStylesheet library="css" name="mapbox-gl.css" />
        <h:outputStylesheet library="css" name="mapbox-gl-directions.css"></h:outputStylesheet>


        <style>
            * {
                -webkit-box-sizing: border-box;
                -moz-box-sizing: border-box;
                box-sizing: border-box;
            }

            body {
                color: #404040;
                font: 400 15px/22px 'Source Sans Pro', 'Helvetica Neue', Sans-serif;
                margin: 0;
                padding: 0;
                -webkit-font-smoothing: antialiased;
            }

            h1 {
                font-size: 22px;
                margin: 0;
                font-weight: 400;
                line-height: 20px;
                padding: 20px 2px;
            }

            a {
                color: #404040;
                text-decoration: none;
            }

            a:hover {
                color: #101010;
            }

            /* The page is split between map and sidebar - the sidebar gets 1/3, map
            gets 2/3 of the page. You can adjust this to your personal liking. */
            .sidebar {
                position: center;
                width: 100%;
                height: 1000px;
                top: 0;
                left: 0;
                overflow: hidden;
                border-right: 1px solid rgba(0, 0, 0, 0.25);
            }

            .map {
                margin: 0px;
                width: 100%;
                height: 1000px;
                top: 0;
                bottom: 0;
            }

            #map {
                width: 100%;
                height: 1000px;
            }

            .heading {
                background: #fff;
                border-bottom: 1px solid #eee;
                height: 60px;
                line-height: 60px;
                padding: 0 10px;
            }

            #barra {
                width: 500px !important;


            }

            .listings {
                height: 100%;
                overflow: auto;
                padding-bottom: 60px;
            }

            .listings .item {
                display: block;
                border-bottom: 1px solid #eee;
                padding: 10px;
                text-decoration: none;
            }

            .listings .item:last-child { border-bottom: none; }

            .listings .item .title {
                display: block;
                color: #00853e;
                font-weight: 700;
            }

            .listings .item .title small { font-weight: 400; }

            .listings .item.active .title,
            .listings .item .title:hover { color: #8cc63f; }

            .listings .item.active {
                background-color: #f8f8f8;
            }

            ::-webkit-scrollbar {
                width: 3px;
                height: 3px;
                border-left: 0;
                background: rgba(0, 0, 0, 0.1);
            }

            ::-webkit-scrollbar-track {
                background: none;
            }

            ::-webkit-scrollbar-thumb {
                background: #00853e;
                border-radius: 0;
            }

            .clearfix { display: block; }

            .clearfix::after {
                content: '.';
                display: block;
                height: 0;
                clear: both;
                visibility: hidden;
            }

            input[type="text"] {
                border-bottom-left-radius: 0;
                border-bottom-right-radius: 0;
                height: 35px;
                width: 250px;


            }

            body .ui-slider.ui-slider-horizontal {
                height: 10px;
                width: 250px;

            }

            .ui-inputfield ui-inputtext ui-widget ui-state-default ui-corner-all ui-state-filled{
                margin: 0px;
            }

        </style>
    </ui:define>
    <ui:define name="title">#{lugaresCercaBean.titulo()}</ui:define>
    <ui:define name="content">




        <div class="row">
        <div  id="barra">
            <div class='sidebar'>
                <div class='heading'>
                    <h1>#{lugaresCercaBean.titulo()}</h1>
                    <h:form id="form">
                    <h:panelGrid columns="1" style="margin-bottom: 10px;">
                        <p:inputText id="txt5" value="#{lugaresCercaBean.filtrarDistancia}"/>
                        <p:slider for="txt5" maxValue="10000" >
                            <p:ajax event="slideEnd" listener="#{lugaresCercaBean.actualizarLugares}" update="lista"/>

                        </p:slider>
                    </h:panelGrid>

                        <h2><h:outputText value="No hay lugares cercanos"  rendered="#{lugaresCercaBean.lugaresDTO.isEmpty()}" /> </h2>
                        <p:dataView id="lista" var="lugar" value="#{lugaresCercaBean.lugaresDTO}"  rendered="#{!lugaresCercaBean.lugaresDTO.isEmpty()}" rows="12" paginator="true"  listIcon="pi pi-bars"  >




                            <p:dataViewListItem >
                                <h:panelGrid columns="3" style="width:100%" columnClasses="logo,detail" >

                                    <p:outputPanel>
                                        <h:panelGrid columns="2" cellpadding="5">
                                            <h:outputText value="Nombre:" />
                                            <h:outputText value="#{lugar.nombre}" style="font-weight: bold" />
                                            <h:outputText value="Tipo:" />
                                            <h:outputText value="#{lugar.categoria}" />

                                        </h:panelGrid>
                                    </p:outputPanel>

                                    <p:outputPanel>
                                        <h:panelGrid>
                                            <p:commandButton value="Ver detalle" action="#{moderadorBean.irAlDetalle(lugar.codigo)}" styleClass="ui-button-raised" icon="pi pi-arrow-right" iconPos="right" />


                                        </h:panelGrid>
                                    </p:outputPanel>
                                </h:panelGrid>
                            </p:dataViewListItem>

                        </p:dataView>



                        <!--
                        <p:dataList id="lista" emptyMessage="No hay horarios para este lugar." value="#{lugaresCercaBean.lugaresDTO}" var="lugar" type="definition" itemType="disc" styleClass="noBorders">
                        <-->
                        <p class="lista-horario">
                            #{lugar.nombre}
                            <h:inputHidden id="distancia" value="#{lugaresCercaBean.dis}"/>
                        </p>

                    </h:form>
                </div>
            </div>
                <div id='listings' class='listings'></div>
            </div>
        <div class="col">
            <div id ="map" class="map">

            </div>
        </div>

        </div>



<!--
        <div class='sidebar'>
            <div class='heading'>
                <h1>#{lugaresCercaBean.titulo()}</h1>
            </div>
            <div id='listings' class='listings'></div>
        </div>

        <div id ="map" class="map">

        </div>

-->








      <script>

          function crearMapa (lugares) {
              mapboxgl.accessToken = 'pk.eyJ1IjoiY2VtYXJxdWV6MjkiLCJhIjoiY2tyNDJxY2c4MnJzajJvbW5obmR5ZzJzeiJ9.u5GTJHs4XDj1XMlg976kKg';
              var map = new mapboxgl.Map({
                  container: 'map',
                  style: 'mapbox://styles/mapbox/streets-v11'
              });

              map.on("load", function (e){
                  ubicarLugares(lugares, map);
              });

          }

          function ubicarLugares(lugares, map){
              let bounds = new mapboxgl.LngLatBounds();

              if ("geolocation" in navigator) {
                  navigator.geolocation.getCurrentPosition(position => {
                      var start = [position.coords.longitude, position.coords.latitude];
                      for (let l of lugares) {

                          let marker = new mapboxgl.Marker().setLngLat([l.longitud, l.latitud]).setPopup(new mapboxgl.Popup().setHTML("<strong> " + l.nombre + "</strong> " + "<br/> <a href='http://localhost:8080/detalleLugar.xhtml?lugar=" + l.id + "'> Ir a detalle </a>")).addTo(map);
                          let posFinal = marker.getLngLat();
                          let markerInicial = new mapboxgl.Marker().setLngLat(start).setPopup(new mapboxgl.Popup().setHTML("<strong> " + l.nombre + "</strong> " + "<br/> <a href='http://localhost:8080/detalleLugar.xhtml?lugar=" + l.id + "'> Ir a detalle </a>"));
                          let posInicial = markerInicial.getLngLat();
                          var distance = (posInicial.distanceTo(posFinal)).toFixed(0);




                          setDistance(distance, l.contadorId);



                          bounds.extend([l.longitud, l.latitud]);





                      }
                      map.fitBounds(bounds, {padding: 100})
                  });

              }



          }

          function setDistance(disancia, id){
              document.getElementById("form:lista:" + id + ":distancia").value = disancia;
          }





      </script>

    </ui:define>

</ui:composition>

</html>